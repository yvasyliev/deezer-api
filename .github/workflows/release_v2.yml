name: Release V2

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        type: choice
        options:
          - patch
          - minor
          - major
          - provided

jobs:
  release_v2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install XMLStarlet
        run: sudo apt-get install xmlstarlet
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY_V2 }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: Get current version
        id: get_current_version
        run: |
          current_version=$(xmlstarlet sel -N pom=http://maven.apache.org/POM/4.0.0 -t -v "/pom:project/pom:version" pom.xml)
          echo "current_version=$current_version"
          echo "VERSION=$current_version" >> $GITHUB_ENV
      - name: Validate current version
        if: github.event.inputs.release_type != 'provided'
        run: |
          echo ${{ env.VERSION }} | grep -qoP "^\d+\.\d+\.\d+((\.|-).+)?$" || (echo "::error::Unexpected artifact version found in pom.xml: ${{ env.VERSION }}. Expected format: x.y.z*" && exit 1)
      - name: Increment patch version
        if: github.event.inputs.release_type == 'patch'
        run: |
          patch_version=$(echo ${{ env.VERSION }} | grep -oP "^\d+\.\d+\.\K\d+")
          echo "patch_version=$patch_version"
          incremented_patch_version=$((patch_version + 1))
          echo "incremented_patch_version=$incremented_patch_version"
          echo "VERSION=$(echo ${{ env.VERSION }} | grep -oP '^\d+\.\d+\.')$incremented_patch_version" >> $GITHUB_ENV
      - name: Increment minor version
        if: github.event.inputs.release_type == 'minor'
        run: |
          minor_version=$(echo ${{ env.VERSION }} | grep -oP "^\d+\.\K\d+")
          echo "minor_version=$minor_version"
          incremented_minor_version=$((minor_version + 1))
          echo "incremented_minor_version=$incremented_minor_version"
          echo "VERSION=$(echo ${{ env.VERSION }} | grep -oP '^\d+\.')$incremented_minor_version.0" >> $GITHUB_ENV
      - name: Increment major version
        if: github.event.inputs.release_type == 'major'
        run: |
          major_version=$(echo ${{ env.VERSION }} | grep -oP "^\d+")
          echo "major_version=$major_version"
          incremented_major_version=$((major_version + 1))
          echo "incremented_major_version=$incremented_major_version"
          echo "VERSION=$incremented_major_version.0.0" >> $GITHUB_ENV
      - name: Print new version
        run: echo "new_version=${{ env.VERSION }}"
      - name: Update pom.xml version
        run: xmlstarlet ed -P -L -N pom=http://maven.apache.org/POM/4.0.0 -u "/pom:project/pom:version" -v ${{ env.VERSION }} pom.xml
      - name: Update REAMDE.md version
        run: sed -i -E "s/<version>.*<\/version>/<version>${{ env.VERSION }}<\/version>/g" README.md
      - name: Set Tag name
        run: echo "TAG=v${{ env.VERSION }}" >> $GITHUB_ENV
      - name: Commit & Push changes
        run: |
          git config user.email "github-actions@github.com"
          git config user.name "github-actions"
          git add pom.xml README.md
          git commit -m "${{ env.TAG }}"
          git push
      - name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        run: mvn deploy
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.TAG }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          draft: true
          body: |
            ```xml
            <dependency>
                <groupId>com.github.yvasyliev</groupId>
                <artifactId>deezer-api</artifactId>
                <version>${{ env.VERSION }}</version>
            </dependency>
            ```
      - name: Set Jar name
        run: echo "JAR_NAME=deezer-api-${{ env.VERSION }}-jar-with-dependencies.jar" >> $GITHUB_ENV
      - name: Set Jar path
        run: echo "JAR_PATH=target/${{ env.JAR_NAME }}" >> $GITHUB_ENV
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: ${{ env.JAR_NAME }}
          asset_content_type: application/java-archive
