name: Release V2

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        type: choice
        required: false
        options:
          - patch
          - minor
          - major
          - provided

jobs:
  release_v2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install XMLStarlet
        run: sudo apt-get install xmlstarlet
      - name: Get current version
        id: get_current_version
        run: |
          current_version=$(xmlstarlet sel -N pom=http://maven.apache.org/POM/4.0.0 -t -v "/pom:project/pom:version" pom.xml)
          echo "current_version=$current_version"
          echo "VERSION=$current_version" >> $GITHUB_ENV
      - name: Validate current version
        if: github.event.inputs.release_type != 'provided'
        run: |
          echo ${{ env.VERSION }} | grep -qoP "^\d+\.\d+\.\d+((\.|-).+)?$" || (echo "::error::Unexpected artifact version found in pom.xml: ${{ env.VERSION }}. Expected format: x.y.z*" && exit 1)
      - name: Increment patch version
        if: github.event.inputs.release_type == 'patch'
        run: |
          patch_version=$(echo ${{ env.VERSION }} | grep -oP "^\d+\.\d+\.\K\d+")
          echo "patch_version=$patch_version"
          incremented_patch_version=$((patch_version + 1))
          echo "incremented_patch_version=$incremented_patch_version"
          echo "VERSION=$(echo ${{ env.VERSION }} | grep -oP '^\d+\.\d+\.')$incremented_patch_version" >> $GITHUB_ENV
      - name: Increment minor version
        if: github.event.inputs.release_type == 'minor'
        run: |
          minor_version=$(echo ${{ env.VERSION }} | grep -oP "^\d+\.\K\d+")
          echo "minor_version=$minor_version"
          incremented_minor_version=$((minor_version + 1))
          echo "incremented_minor_version=$incremented_minor_version"
          echo "VERSION=$(echo ${{ env.VERSION }} | grep -oP '^\d+\.\d+\.')$incremented_minor_version" >> $GITHUB_ENV
      - name: Print new version
        run: echo "new_version=${{ env.VERSION }}"
