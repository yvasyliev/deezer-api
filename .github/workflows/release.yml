# TODO remove comments
name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

env:
  TAG: v${{ github.event.inputs.version }}
  JAR_NAME: deezer-api-${{ github.event.inputs.version }}-jar-with-dependencies.jar
  JAR_PATH: target/deezer-api-${{ github.event.inputs.version }}-jar-with-dependencies.jar

jobs:
  check_input:
    runs-on: ubuntu-latest
    steps:
      - name: Check input
        id: check_input
        run: |
          [[ ${{ github.event.inputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "match=true" >> $GITHUB_OUTPUT || echo "match=false" >> $GITHUB_OUTPUT
      - name: Validate input
        if: steps.check_input.outputs.match != 'true'
        run: |
          echo "::error::Incorrect release version format: ${{ github.event.inputs.version }}. Expected format: x.y.z."
          exit 1
  release:
    runs-on: ubuntu-latest
    needs: [ check_input ]
    steps:
#      - name: Install gpg secret key
#        run: |
#          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY_V2 }}") | gpg --batch --import
#          gpg --list-secret-keys --keyid-format LONG
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: maven
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_USERNAME # env variable for username in deploy
          server-password: MAVEN_PASSWORD # env variable for token in deploy
          gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY_V2 }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase
      - name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
#        run: mvn -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} deploy
        run: mvn deploy
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ env.TAG }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          draft: true
          body: |
            ```xml
            <dependency>
                <groupId>com.github.yvasyliev</groupId>
                <artifactId>deezer-api</artifactId>
                <version>${{ github.event.inputs.version }}</version>
            </dependency>
            ```
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: ${{ env.JAR_NAME }}
          asset_content_type: application/java-archive
